"""add users and user_profiles tables

Revision ID: b9888cacaae0
Revises: a51fe4886ed4
Create Date: 2025-06-24 11:19:16.064313

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b9888cacaae0'
down_revision: Union[str, None] = 'a51fe4886ed4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_profiles', sa.Column('user_id', sa.Integer(), nullable=True))
    op.create_unique_constraint(None, 'user_profiles', ['user_id'])
    op.create_foreign_key(None, 'user_profiles', 'users', ['user_id'], ['id'])
    op.drop_constraint(op.f('users_user_profile_id_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_user_profile_id_fkey'), 'users', type_='foreignkey')
    op.drop_column('users', 'user_profile_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('user_profile_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('users_user_profile_id_fkey'), 'users', 'user_profiles', ['user_profile_id'], ['id'])
    op.create_unique_constraint(op.f('users_user_profile_id_key'), 'users', ['user_profile_id'], postgresql_nulls_not_distinct=False)
    op.drop_constraint(None, 'user_profiles', type_='foreignkey')
    op.drop_constraint(None, 'user_profiles', type_='unique')
    op.drop_column('user_profiles', 'user_id')
    # ### end Alembic commands ###
