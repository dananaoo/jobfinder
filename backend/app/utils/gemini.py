import os
import json
import openai
import re
from dotenv import load_dotenv
from fastapi import HTTPException

load_dotenv()

client = openai.AzureOpenAI(
    api_key=os.getenv("AZURE_OPENAI_API_KEY"),
    api_version="2024-02-15-preview",
    azure_endpoint=os.getenv("AZURE_OPENAI_ENDPOINT")
)

DEPLOYMENT_NAME = os.getenv("AZURE_OPENAI_DEPLOYMENT")  # –ù–∞–ø—Ä–∏–º–µ—Ä: "gpt-35-turbo"

def extract_json_from_response(text: str) -> dict:
    try:
        json_str = re.search(r"\{.*\}", text, re.DOTALL).group()
        return json.loads(json_str)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ JSON:", e)
        raise HTTPException(status_code=500, detail="OpenAI –≤–µ—Ä–Ω—É–ª –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON")

def analyze_resume_with_openai(text: str) -> dict:
    prompt = f"""
–¢—ã ‚Äî AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ—Ç —Ä–µ–∑—é–º–µ –¥–ª—è HR-—Å–∏—Å—Ç–µ–º—ã. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω–æ –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞–∂–¥–æ–º—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–ª–µ–π. –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–º—É-—Ç–æ –ø–æ–ª—é –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚Äî –Ω–µ –≤–∫–ª—é—á–∞–π –µ–≥–æ –≤ JSON –≤–æ–æ–±—â–µ (–Ω–µ –ø–∏—à–∏ 'string', 'null', 'none', '0' –∏ —Ç.–ø.).

**–ü–æ–ª—è –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
- full_name: –§–ò–û –ø–æ–ª–Ω–æ—Å—Ç—å—é, –µ—Å–ª–∏ –µ—Å—Ç—å.
- gender: –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'male', 'female', '–∂–µ–Ω—Å–∫–∏–π', '–º—É–∂—Å–∫–æ–π').
- phone_number: –¢–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤.
- email: –¢–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–π email, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤.
- citizenship: –ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ.
- address: –ì–æ—Ä–æ–¥ –∏ —Å—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å.
- education: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –∫–ª—é—á–∞–º–∏: university, degree, cgpa, scholarship, start_date, end_date, relevant_courses (–µ—Å–ª–∏ –µ—Å—Ç—å).
- experience: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –∫–ª—é—á–∞–º–∏: title, company/organization, location, start_date, end_date, responsibilities, achievement (–µ—Å–ª–∏ –µ—Å—Ç—å).
- experience_level: –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω (junior/middle/senior/lead –∏ —Ç.–ø.).
- skills: –°–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∏ —Ç.–ø. (–Ω–∞–ø—Ä–∏–º–µ—Ä, ["Python", "SQL", "Django"]).
- languages: –°–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤ –∏ —É—Ä–æ–≤–Ω–µ–π –≤–ª–∞–¥–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å.
- interests: –°–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤, –µ—Å–ª–∏ –µ—Å—Ç—å.
- achievements: –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π, –Ω–∞–≥—Ä–∞–¥, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤, –ø—Ä–∏–∑–æ–≤—ã—Ö –º–µ—Å—Ç, –ø—É–±–ª–∏–∫–∞—Ü–∏–π –∏ —Ç.–ø. –î–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –æ–ø—ã—Ç–∞ –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤, –≤—ã–¥–µ–ª–∏ –∏—Ö —Å—é–¥–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–ø–∏—Å–∫–æ–º.
- desired_position: –ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞.
- desired_salary: –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–∞ —Å—É–º–º–∞ –∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω.
- desired_city: –ì–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º –∏—â–µ—Ç —Ä–∞–±–æ—Ç—É, –µ—Å–ª–∏ –µ—Å—Ç—å.
- desired_format: –§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã (–æ–Ω–ª–∞–π–Ω, –æ—Ñ–ª–∞–π–Ω, –≥–∏–±—Ä–∏–¥), –µ—Å–ª–∏ –µ—Å—Ç—å.
- desired_work_time: –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã (full-time, part-time –∏ —Ç.–ø.), –µ—Å–ª–∏ –µ—Å—Ç—å.
- industries: –°–ø–∏—Å–æ–∫ –∏–Ω–¥—É—Å—Ç—Ä–∏–π –∏–ª–∏ —Å—Ñ–µ—Ä, –µ—Å–ª–∏ –µ—Å—Ç—å.

**–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
- –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–π –ø–æ–ª–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–µ–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
- –ù–µ –ø–∏—à–∏ –º—É—Å–æ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è ('string', 'none', 'null', '0', 'N/A' –∏ —Ç.–ø.).
- –ï—Å–ª–∏ –ø–æ–ª–µ —Å–ª–æ–∂–Ω–æ–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, education, experience, skills, achievements), –≤–µ—Ä–Ω–∏ –µ–≥–æ –∫–∞–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–ª–∏ —Å–ø–∏—Å–æ–∫.
- –ï—Å–ª–∏ –≤ —Ä–µ–∑—é–º–µ –µ—Å—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è (–Ω–∞–≥—Ä–∞–¥—ã, –ø—Ä–∏–∑–æ–≤—ã–µ –º–µ—Å—Ç–∞, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã, –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏ —Ç.–¥.), –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–¥–µ–ª–∏ –∏—Ö –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ achievements (—Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫), –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –æ–ø—ã—Ç–∞ –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤.

**–ü—Ä–∏–º–µ—Ä:**
{{
  "full_name": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
  "email": "ivan@example.com",
  "phone_number": "+7 777 123 45 67",
  "education": {{
    "university": "–ú–ì–£",
    "degree": "–ë–∞–∫–∞–ª–∞–≤—Ä –ø—Ä–∏–∫–ª–∞–¥–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏",
    "cgpa": 4.8,
    "start_date": "2018",
    "end_date": "2022"
  }},
  "skills": ["Python", "SQL", "Django"],
  "experience": [
    {{
      "title": "Backend Developer",
      "company": "–û–û–û –†–æ–≥–∞ –∏ –ö–æ–ø—ã—Ç–∞",
      "location": "–ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è",
      "start_date": "2022-06",
      "end_date": "2023-12",
      "responsibilities": ["–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ API", "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏"],
      "achievement": "–í–Ω–µ–¥—Ä–∏–ª CI/CD, —É—Å–∫–æ—Ä–∏–ª —Ä–µ–ª–∏–∑—ã –Ω–∞ 30%"
    }}
  ],
  "achievements": [
    "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–ª–∏–º–ø–∏–∞–¥—ã –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é",
    "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç AWS Certified Developer"
  ]
}}

–†–µ–∑—é–º–µ:
{text}
"""  # –¢–≤–æ–π –¥–ª–∏–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –æ—Å—Ç–∞–≤—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

    try:
        response = client.chat.completions.create(
            model=DEPLOYMENT_NAME,
            messages=[
                {"role": "system", "content": "–¢—ã —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ—à—å —Ä–µ–∑—é–º–µ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–≥–æ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —à–∞–±–ª–æ–Ω—É."},
                {"role": "user", "content": prompt},
            ],
            temperature=0.2,
            max_tokens=2000,
        )
        raw_text = response.choices[0].message.content
        print("üì• –û—Ç–≤–µ—Ç –æ—Ç Azure OpenAI:", raw_text)
        return extract_json_from_response(raw_text)
    except Exception as e:
        print("‚ùå Azure OpenAI API error:", e)
        raise HTTPException(status_code=500, detail="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Azure OpenAI API")

def recommend_jobs_with_openai(profile: dict, jobs: list) -> list:
    """
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Azure OpenAI –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω.
    –ù–∞ –≤—Ö–æ–¥–µ: profile (dict) ‚Äî –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, jobs (list) ‚Äî —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π (dict).
    –ù–∞ –≤—ã—Ö–æ–¥–µ: —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π —Å –ø—Ä–∏—á–∏–Ω–∞–º–∏ (list of dict: {job, reasons})
    """
    prompt = f"""
–¢—ã ‚Äî AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –ø–æ–¥–±–æ—Ä—É –≤–∞–∫–∞–Ω—Å–∏–π. –¢–µ–±–µ –¥–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ –≤–∞–∫–∞–Ω—Å–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—Ç —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –ø–æ 2-3 —Å–æ–≤–ø–∞–¥–∞—é—â–∏–º –ø—É–Ω–∫—Ç–∞–º: –Ω–∞–≤—ã–∫–∏, –∏–Ω–¥—É—Å—Ç—Ä–∏—è, –≥–æ—Ä–æ–¥, —Ñ–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã, –≥—Ä–∞—Ñ–∏–∫, –∂–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∏ —Ç.–¥.).

–î–ª—è –∫–∞–∂–¥–æ–π –ø–æ–¥—Ö–æ–¥—è—â–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏:
- –í–µ—Ä–Ω–∏ id –≤–∞–∫–∞–Ω—Å–∏–∏
- –ö—Ä–∞—Ç–∫–æ –æ–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É –æ–Ω–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç (—É–∫–∞–∂–∏ —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ –ø—É–Ω–∫—Ç—ã)
- –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–π –≤–∞–∫–∞–Ω—Å–∏–∏, –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Ç–æ–ª—å–∫–æ 1 –ø—É–Ω–∫—Ç –∏–ª–∏ –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
- –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –≤–∞–∫–∞–Ω—Å–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –∏–∑ —Å–ø–∏—Å–∫–∞

–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
{json.dumps(profile, ensure_ascii=False, indent=2)}

–°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π:
{json.dumps(jobs, ensure_ascii=False, indent=2)}

–û—Ç–≤–µ—Ç –≤–µ—Ä–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
[
  {{
    "id": <id –≤–∞–∫–∞–Ω—Å–∏–∏>,
    "reasons": ["–ü—Ä–∏—á–∏–Ω–∞ 1", "–ü—Ä–∏—á–∏–Ω–∞ 2", ...]
  }}, ...
]
"""
    try:
        response = client.chat.completions.create(
            model=DEPLOYMENT_NAME,
            messages=[
                {"role": "system", "content": "–¢—ã –ø–æ–º–æ–≥–∞–µ—à—å —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –ø—Ä–æ—Ñ–∏–ª—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û—Ç–≤–µ—á–∞–π —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON."},
                {"role": "user", "content": prompt},
            ],
            temperature=0.2,
            max_tokens=2000,
        )
        raw_text = response.choices[0].message.content
        print("üì• –û—Ç–≤–µ—Ç –æ—Ç Azure OpenAI (recommend):", raw_text)
        return json.loads(raw_text)
    except Exception as e:
        print("‚ùå Azure OpenAI API error (recommend):", e)
        raise HTTPException(status_code=500, detail="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Azure OpenAI API (recommend)")

